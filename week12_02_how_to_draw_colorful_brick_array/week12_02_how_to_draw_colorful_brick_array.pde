color [] c = { #FFFFFA, #5A5757, #E5C18C, #FFFFFF, #FFF8C5, #FFE9FF};
int [][] dog = {
  {0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0},
  {0,0,1,2,1,0,0,0,0,0,0,0,0,0,0,1,2,1,0,0},
  {0,0,1,2,2,1,0,0,0,0,0,0,0,0,1,2,2,1,0,0},
  {0,0,1,2,2,2,1,0,0,0,0,0,0,1,2,2,2,1,0,0},
  {0,0,1,2,2,2,2,1,0,0,0,0,1,2,2,2,2,1,0,0},
  {0,0,1,2,2,2,2,2,1,1,1,1,2,2,2,2,2,1,0,0},
  {0,0,1,1,2,2,2,2,2,3,3,2,2,2,2,2,1,1,0,0},
  {0,0,1,2,2,2,2,3,3,3,3,3,3,2,3,3,3,1,0,0},
  {0,1,3,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,1,0},
  {0,1,3,3,2,1,1,1,1,3,3,1,1,1,1,3,3,3,1,0},
  {0,1,3,1,1,1,2,2,2,2,2,2,2,2,1,1,1,3,1,0},
  {0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0},
  {0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,0},
  {1,1,2,2,4,4,4,1,1,2,2,1,1,4,4,4,2,2,1,1},
  {1,2,2,4,4,4,4,3,1,1,1,1,3,4,4,4,4,2,2,1},
  {1,2,4,4,3,3,3,3,3,1,1,3,3,3,3,3,4,4,2,1},
  {1,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,1},
  {1,4,3,3,3,3,3,3,3,5,5,3,3,3,3,3,3,3,4,1},
  {1,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,1},
  {1,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,1},
  {1,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,1},
  {1,2,4,4,3,3,3,3,3,3,3,3,3,3,3,3,4,4,2,1},
  {0,1,2,2,3,3,3,3,3,1,1,3,3,3,3,3,2,2,1,0},
  {0,0,1,2,2,3,3,3,3,1,1,3,3,3,3,2,2,1,0,0},
  {0,0,0,1,2,2,2,3,1,0,0,1,3,2,2,2,1,0,0,0},
  {0,0,0,0,1,3,2,1,0,0,0,0,1,2,3,1,0,0,0,0},
  {0,0,0,0,1,3,3,1,0,0,0,0,1,3,3,1,0,0,0,0},
  {0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0}};

void setup(){
  size(800,800);
  println(dog.length);
  println(dog[0].length);
}
int x=400, y=700;
void draw(){
  background(#FFFFFA);
  for(int i=0; i<dog.length; i++){
    for(int j=0; j<dog[0].length; j++){
      if(dog[i][j]>0){
        
        fill(c[dog[i][j]]);
        rect(200+j*20, 100+i*20, 20, 20);
      }
    }
  }
  x = mouseX;
  y = mouseY;
  fill(#FFE9FF); ellipse(x, y, 20, 20);
  int ii = findI(y), jj=findJ(x);
  //fill(255,0,0,128); rect(200+jj*20, 100+ii*20, 20, 20);
  if(ii>=0 && ii<28 && jj>=0 && jj<20) dog[ii][jj]=0;
  
}
int findI(int y){
  return (y-100)/20;
}
int findJ(int x){
  return (x-200)/20;
}
